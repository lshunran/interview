HTTP三次握手和四次握手

请求连接
0.初始状态：客户端和服务端都是关闭状态，客户端打开直接发起连接，服务端打开处于listen状态
1.客户端发送一个SYN=1的报文给服务端，此时客户端的状态变为SYN-SENT
2.服务端收到报文后如果同意连接就返回SYN=1、ACK=1的报文，此时服务端的状态变成ACK-REVD
3.客户端收到确认报文后，检验连接是否建立，如没有建立，则给服务端发送ACK=1的报文，此时客户端变成established状态，服务端收到后，也变成established状态

注意：服务端资源是第二次握手时分配的，客户端资源是第三次握手时分配的，使得服务器更容易收到SYN泛洪攻击

SYN泛洪攻击是攻击者向服务器发送TCP SYN报文请求建立连接，然后服务端返回确认报文后不给予确认，使得服务端存在大量未建立的连接，服务端的资源就在等待这些连接自动释放的过程中消耗殆尽


请求断开
0.初始状态：客户端和服务端都是established状态
1.客户端打算关闭连接时，向服务端发送FIN=1的报文段，此时客户端变成FIN-WAIT-1状态，并且关闭了客户端到服务端的数据通路
2.服务端收到后发送ACK=1的确认报文，此时变成CLOSE-WAIT状态，并且释放了客户端到服务端的连接，TCP处于半关闭状态，服务器如果继续发送数据，客户机仍要接收
3.如果服务器没有要发送的数据了，就发送FIN=1的报文到客户端，此时服务端变成LAST-ACK状态
4.客户端收到报文后必须发出ACK=1确认报文，然后TCP连接还未释放，在等待两个周期后变成CLOSED状态，服务端收到报文后变成CLOSED状态

为什么要等待2MSL：最后一次ACK=1的确认报文不一定发送成功，要留足重发的时间
为什么要四次：服务端要有一个发送完最后的数据的过程，发送完之后，要给客户端一个确认